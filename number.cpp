//=============================================================================
//
// 番号処理 [number.cpp]
// Author : KADO TAKUMA
//
//=============================================================================

//=============================================================================
// インクルードファイル
//=============================================================================
#include "number.h"
#include "rendering.h"
#include "application.h"
#include "player.h"
#include <assert.h>

//=============================================================================
// 静的メンバ変数宣言
//=============================================================================
LPDIRECT3DTEXTURE9 CNumber::m_pTexture = nullptr;

//=============================================================================
// コンストラクタ
//=============================================================================
CNumber::CNumber() : 
	CObject_2D(5),
	m_bShow(true)
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CNumber::~CNumber()
{

}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CNumber::Init(void)
{
	//オブジェクトの初期化処理
	CObject_2D::Init();

	//頂点カラーの設定
	CObject_2D::SetColor(D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f));

	//派生のテクスチャポインタを親のテクスチャポインタに代入する処理
	SetTexture(CObject::TEXTURE_NUMBERS);

	//テクスチャ座標初期化
	float fShiftWidth = 1.0f / 10.0f;

	SetTextureParameter(1, 10, 1, INT_MAX);
	SetAnimPattern(0);

	return S_OK;
}

//=============================================================================
// 更新処理
//=============================================================================
void CNumber::Uninit(void)
{
	//オブジェクトの終了処理
	CObject_2D::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CNumber::Update(void)
{
	this;

	int a = 0;
}

//=============================================================================
// 描画処理
//=============================================================================
void CNumber::Draw()
{
	if (m_bShow)
	{
		//オブジェクトの描画処理
		CObject_2D::Draw();
	}
}

//=============================================================================
// 番号の生成処理
//=============================================================================
CNumber *CNumber::Create(D3DXVECTOR3 pos, D3DXVECTOR2 size)
{
	//ポインタ宣言
	CNumber *pNumber = nullptr;

	//インスタンス生成
	pNumber = new CNumber;

	if (pNumber != nullptr)
	{//ポインタが存在したら実行
		pNumber->Init();
		pNumber->SetSize(size);
		pNumber->SetPos(pos);
		pNumber->SetColor(ColorMagenta);
	}
	else
	{//ポインタが虚無だったら実行
		assert(false);
	}

	return pNumber;
}

//=============================================================================
// テクスチャの読み込み
//=============================================================================
HRESULT CNumber::Load(void)
{
	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = CApplication::GetRenderer()->GetDevice();

	//テクスチャの読み込み*
	D3DXCreateTextureFromFile(pDevice,
		"data/TEXTURE/number000.png",
		&m_pTexture);

	return S_OK;
}

//=============================================================================
// テクスチャの破棄
//=============================================================================
void CNumber::UnLoad(void)
{
	//テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}
